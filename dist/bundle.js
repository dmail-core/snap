(()=>{var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};(()=>{"use strict";function n(e,t,n){if("string"==typeof e)throw new Error(`An HTML element ("${String(e)}") was used in a Snap component, which is not supported by Snaps UI. Please use one of the supported Snap components.`);if(!e)throw new Error("A JSX fragment was used in a Snap component, which is not supported by Snaps UI. Please use one of the supported Snap components.");return e({...t,key:n})}function o(e,t,o){return n(e,t,o)}function i(e){return Object.fromEntries(Object.entries(e).filter((([,e])=>void 0!==e)))}function s(e){return t=>{const{key:n=null,...o}=t;return{type:e,props:i(o),key:n}}}e.r(t),e.d(t,{onCronjob:()=>c,onRpcRequest:()=>m});const r=s("Box"),a=s("Text"),l=s("Bold"),d=s("Heading"),p="@dmail.ai",u=e=>{const t=e.split("@");if(t.length>1){const e=t[0]||"";return`${e.length>12?((e,t=5,n=8,o="***")=>{if(!e||"string"!=typeof e)return;const i=e.split("");return i.slice(0,t).join("")+o+i.slice(-n).join("")})(e,5,3):e}${p}`}return e},c=async({request:e})=>{if("execute"===e.method){var t,i;const e=await snap.request({method:"snap_manageState",params:{operation:"get"}}),c=Array.isArray(null===(t=e)||void 0===t?void 0:t.keys)?null===(i=e)||void 0===i?void 0:i.keys:[];if(c.length){var s,d;const e=c.join("_"),t=await fetch(`https://icp.dmail.ai/dmailServer/api/snap/getMessageList?keys=${e}`),i=await t.json();if((null===(s=i)||void 0===s?void 0:s.success)&&Array.isArray(null===(d=i)||void 0===d?void 0:d.data)&&i.data.length){const e=i.data.slice(0,5);for(;e.length;){const{sender:t,recipient:i,subject:s,content:d}=e.shift();if("string"!=typeof d)continue;const c=s.length>100?`${s.substring(0,100)}...`:s,m=d.length>480?`${d.substring(0,480)}...`:d,h=i.includes(p)?u(i):i;await snap.request({method:"snap_notify",params:{type:"inApp",message:`${t} sent You(${h}) an email`,title:c,content:o(r,{children:[n(a,{children:n(l,{children:"Content:"})}),n(a,{children:m})]}),footerLink:{href:"https://mail.dmail.ai/inbox",text:"Reply"}}}),await new Promise((e=>setTimeout(e,1e3)))}}}}throw new Error("Method not found.")},m=async({origin:e,request:t})=>{switch(t.method){case"bind":var i,s;if((null===(i=t)||void 0===i?void 0:i.params)&&"key"in(null===(s=t)||void 0===s?void 0:s.params)){var l,p,u,c;const e=null===(p=t)||void 0===p||null===(l=p.params)||void 0===l?void 0:l.key,n=await snap.request({method:"snap_manageState",params:{operation:"get"}});if(!n||!Array.isArray(null===(u=n)||void 0===u?void 0:u.keys)||!(null===(c=n)||void 0===c?void 0:c.keys.includes(e))){var m;const t=n&&Array.isArray(null===(m=n)||void 0===m?void 0:m.keys)?n.keys:[];await snap.request({method:"snap_manageState",params:{operation:"update",newState:{...n,keys:[...t,e]}}})}}return!0;case"sendNotification":return await snap.request({method:"snap_notify",params:{type:"inApp",message:"This is a message!",title:"This is a title",content:o(r,{children:[n(d,{children:"Here is content!"}),n(a,{children:"This is a notification sent from a Dmail."})]}),footerLink:{href:"https://snaps.metamask.io",text:"Jump"}}}),"send successful!";default:throw new Error("Method not found.")}}})(),module.exports=t})();